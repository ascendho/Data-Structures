# CMAKE generated file: DO NOT EDIT!
# Generated by "Ninja" Generator, CMake Version 3.25

# This file contains all the build statements describing the
# compilation DAG.

# =============================================================================
# Write statements declared in CMakeLists.txt:
# 
# Which is the root file.
# =============================================================================

# =============================================================================
# Project: TextBook
# Configurations: Debug
# =============================================================================

#############################################
# Minimal version of Ninja required by this file

ninja_required_version = 1.5


#############################################
# Set configuration variable for custom commands.

CONFIGURATION = Debug
# =============================================================================
# Include auxiliary files.


#############################################
# Include rules file.

include CMakeFiles/rules.ninja

# =============================================================================

#############################################
# Logical path to working directory; prefix for absolute paths.

cmake_ninja_workdir = D$:/data/duotone/repo/06-Graph/TextBook/cmake-build-debug/
# =============================================================================
# Object build statements for EXECUTABLE target Graph


#############################################
# Order-only phony target for Graph

build cmake_object_order_depends_target_Graph: phony || CMakeFiles/Graph.dir

build CMakeFiles/Graph.dir/Graph.cpp.obj: CXX_COMPILER__Graph_Debug D$:/data/duotone/repo/06-Graph/TextBook/Graph.cpp || cmake_object_order_depends_target_Graph
  DEP_FILE = CMakeFiles\Graph.dir\Graph.cpp.obj.d
  FLAGS = -g -fdiagnostics-color=always -std=gnu++20
  OBJECT_DIR = CMakeFiles\Graph.dir
  OBJECT_FILE_DIR = CMakeFiles\Graph.dir


# =============================================================================
# Link build statements for EXECUTABLE target Graph


#############################################
# Link the executable Graph.exe

build Graph.exe: CXX_EXECUTABLE_LINKER__Graph_Debug CMakeFiles/Graph.dir/Graph.cpp.obj
  FLAGS = -g
  LINK_LIBRARIES = -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
  OBJECT_DIR = CMakeFiles\Graph.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_FILE = Graph.exe
  TARGET_IMPLIB = libGraph.dll.a
  TARGET_PDB = Graph.exe.dbg

# =============================================================================
# Object build statements for EXECUTABLE target AdjacencyMatrix


#############################################
# Order-only phony target for AdjacencyMatrix

build cmake_object_order_depends_target_AdjacencyMatrix: phony || CMakeFiles/AdjacencyMatrix.dir

build CMakeFiles/AdjacencyMatrix.dir/AdjacencyMatrix.cpp.obj: CXX_COMPILER__AdjacencyMatrix_Debug D$:/data/duotone/repo/06-Graph/TextBook/AdjacencyMatrix.cpp || cmake_object_order_depends_target_AdjacencyMatrix
  DEP_FILE = CMakeFiles\AdjacencyMatrix.dir\AdjacencyMatrix.cpp.obj.d
  FLAGS = -g -fdiagnostics-color=always -std=gnu++20
  OBJECT_DIR = CMakeFiles\AdjacencyMatrix.dir
  OBJECT_FILE_DIR = CMakeFiles\AdjacencyMatrix.dir


# =============================================================================
# Link build statements for EXECUTABLE target AdjacencyMatrix


#############################################
# Link the executable AdjacencyMatrix.exe

build AdjacencyMatrix.exe: CXX_EXECUTABLE_LINKER__AdjacencyMatrix_Debug CMakeFiles/AdjacencyMatrix.dir/AdjacencyMatrix.cpp.obj
  FLAGS = -g
  LINK_LIBRARIES = -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
  OBJECT_DIR = CMakeFiles\AdjacencyMatrix.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_FILE = AdjacencyMatrix.exe
  TARGET_IMPLIB = libAdjacencyMatrix.dll.a
  TARGET_PDB = AdjacencyMatrix.exe.dbg

# =============================================================================
# Object build statements for EXECUTABLE target AdjacencyList


#############################################
# Order-only phony target for AdjacencyList

build cmake_object_order_depends_target_AdjacencyList: phony || CMakeFiles/AdjacencyList.dir

build CMakeFiles/AdjacencyList.dir/AdjacencyList.cpp.obj: CXX_COMPILER__AdjacencyList_Debug D$:/data/duotone/repo/06-Graph/TextBook/AdjacencyList.cpp || cmake_object_order_depends_target_AdjacencyList
  DEP_FILE = CMakeFiles\AdjacencyList.dir\AdjacencyList.cpp.obj.d
  FLAGS = -g -fdiagnostics-color=always -std=gnu++20
  OBJECT_DIR = CMakeFiles\AdjacencyList.dir
  OBJECT_FILE_DIR = CMakeFiles\AdjacencyList.dir


# =============================================================================
# Link build statements for EXECUTABLE target AdjacencyList


#############################################
# Link the executable AdjacencyList.exe

build AdjacencyList.exe: CXX_EXECUTABLE_LINKER__AdjacencyList_Debug CMakeFiles/AdjacencyList.dir/AdjacencyList.cpp.obj
  FLAGS = -g
  LINK_LIBRARIES = -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
  OBJECT_DIR = CMakeFiles\AdjacencyList.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_FILE = AdjacencyList.exe
  TARGET_IMPLIB = libAdjacencyList.dll.a
  TARGET_PDB = AdjacencyList.exe.dbg

# =============================================================================
# Object build statements for EXECUTABLE target DFS


#############################################
# Order-only phony target for DFS

build cmake_object_order_depends_target_DFS: phony || CMakeFiles/DFS.dir

build CMakeFiles/DFS.dir/DFS.cpp.obj: CXX_COMPILER__DFS_Debug D$:/data/duotone/repo/06-Graph/TextBook/DFS.cpp || cmake_object_order_depends_target_DFS
  DEP_FILE = CMakeFiles\DFS.dir\DFS.cpp.obj.d
  FLAGS = -g -fdiagnostics-color=always -std=gnu++20
  OBJECT_DIR = CMakeFiles\DFS.dir
  OBJECT_FILE_DIR = CMakeFiles\DFS.dir


# =============================================================================
# Link build statements for EXECUTABLE target DFS


#############################################
# Link the executable DFS.exe

build DFS.exe: CXX_EXECUTABLE_LINKER__DFS_Debug CMakeFiles/DFS.dir/DFS.cpp.obj
  FLAGS = -g
  LINK_LIBRARIES = -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
  OBJECT_DIR = CMakeFiles\DFS.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_FILE = DFS.exe
  TARGET_IMPLIB = libDFS.dll.a
  TARGET_PDB = DFS.exe.dbg

# =============================================================================
# Object build statements for EXECUTABLE target BFS


#############################################
# Order-only phony target for BFS

build cmake_object_order_depends_target_BFS: phony || CMakeFiles/BFS.dir

build CMakeFiles/BFS.dir/BFS.cpp.obj: CXX_COMPILER__BFS_Debug D$:/data/duotone/repo/06-Graph/TextBook/BFS.cpp || cmake_object_order_depends_target_BFS
  DEP_FILE = CMakeFiles\BFS.dir\BFS.cpp.obj.d
  FLAGS = -g -fdiagnostics-color=always -std=gnu++20
  OBJECT_DIR = CMakeFiles\BFS.dir
  OBJECT_FILE_DIR = CMakeFiles\BFS.dir


# =============================================================================
# Link build statements for EXECUTABLE target BFS


#############################################
# Link the executable BFS.exe

build BFS.exe: CXX_EXECUTABLE_LINKER__BFS_Debug CMakeFiles/BFS.dir/BFS.cpp.obj
  FLAGS = -g
  LINK_LIBRARIES = -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
  OBJECT_DIR = CMakeFiles\BFS.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_FILE = BFS.exe
  TARGET_IMPLIB = libBFS.dll.a
  TARGET_PDB = BFS.exe.dbg

# =============================================================================
# Object build statements for EXECUTABLE target MinimumCostSpanningTree


#############################################
# Order-only phony target for MinimumCostSpanningTree

build cmake_object_order_depends_target_MinimumCostSpanningTree: phony || CMakeFiles/MinimumCostSpanningTree.dir

build CMakeFiles/MinimumCostSpanningTree.dir/MinimumCostSpanningTree.cpp.obj: CXX_COMPILER__MinimumCostSpanningTree_Debug D$:/data/duotone/repo/06-Graph/TextBook/MinimumCostSpanningTree.cpp || cmake_object_order_depends_target_MinimumCostSpanningTree
  DEP_FILE = CMakeFiles\MinimumCostSpanningTree.dir\MinimumCostSpanningTree.cpp.obj.d
  FLAGS = -g -fdiagnostics-color=always -std=gnu++20
  OBJECT_DIR = CMakeFiles\MinimumCostSpanningTree.dir
  OBJECT_FILE_DIR = CMakeFiles\MinimumCostSpanningTree.dir


# =============================================================================
# Link build statements for EXECUTABLE target MinimumCostSpanningTree


#############################################
# Link the executable MinimumCostSpanningTree.exe

build MinimumCostSpanningTree.exe: CXX_EXECUTABLE_LINKER__MinimumCostSpanningTree_Debug CMakeFiles/MinimumCostSpanningTree.dir/MinimumCostSpanningTree.cpp.obj
  FLAGS = -g
  LINK_LIBRARIES = -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
  OBJECT_DIR = CMakeFiles\MinimumCostSpanningTree.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_FILE = MinimumCostSpanningTree.exe
  TARGET_IMPLIB = libMinimumCostSpanningTree.dll.a
  TARGET_PDB = MinimumCostSpanningTree.exe.dbg

# =============================================================================
# Object build statements for EXECUTABLE target ShortestPath


#############################################
# Order-only phony target for ShortestPath

build cmake_object_order_depends_target_ShortestPath: phony || CMakeFiles/ShortestPath.dir

build CMakeFiles/ShortestPath.dir/ShortestPath.cpp.obj: CXX_COMPILER__ShortestPath_Debug D$:/data/duotone/repo/06-Graph/TextBook/ShortestPath.cpp || cmake_object_order_depends_target_ShortestPath
  DEP_FILE = CMakeFiles\ShortestPath.dir\ShortestPath.cpp.obj.d
  FLAGS = -g -fdiagnostics-color=always -std=gnu++20
  OBJECT_DIR = CMakeFiles\ShortestPath.dir
  OBJECT_FILE_DIR = CMakeFiles\ShortestPath.dir


# =============================================================================
# Link build statements for EXECUTABLE target ShortestPath


#############################################
# Link the executable ShortestPath.exe

build ShortestPath.exe: CXX_EXECUTABLE_LINKER__ShortestPath_Debug CMakeFiles/ShortestPath.dir/ShortestPath.cpp.obj
  FLAGS = -g
  LINK_LIBRARIES = -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
  OBJECT_DIR = CMakeFiles\ShortestPath.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_FILE = ShortestPath.exe
  TARGET_IMPLIB = libShortestPath.dll.a
  TARGET_PDB = ShortestPath.exe.dbg

# =============================================================================
# Object build statements for EXECUTABLE target TopologicalSort


#############################################
# Order-only phony target for TopologicalSort

build cmake_object_order_depends_target_TopologicalSort: phony || CMakeFiles/TopologicalSort.dir

build CMakeFiles/TopologicalSort.dir/TopologicalSort.cpp.obj: CXX_COMPILER__TopologicalSort_Debug D$:/data/duotone/repo/06-Graph/TextBook/TopologicalSort.cpp || cmake_object_order_depends_target_TopologicalSort
  DEP_FILE = CMakeFiles\TopologicalSort.dir\TopologicalSort.cpp.obj.d
  FLAGS = -g -fdiagnostics-color=always -std=gnu++20
  OBJECT_DIR = CMakeFiles\TopologicalSort.dir
  OBJECT_FILE_DIR = CMakeFiles\TopologicalSort.dir


# =============================================================================
# Link build statements for EXECUTABLE target TopologicalSort


#############################################
# Link the executable TopologicalSort.exe

build TopologicalSort.exe: CXX_EXECUTABLE_LINKER__TopologicalSort_Debug CMakeFiles/TopologicalSort.dir/TopologicalSort.cpp.obj
  FLAGS = -g
  LINK_LIBRARIES = -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
  OBJECT_DIR = CMakeFiles\TopologicalSort.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_FILE = TopologicalSort.exe
  TARGET_IMPLIB = libTopologicalSort.dll.a
  TARGET_PDB = TopologicalSort.exe.dbg

# =============================================================================
# Object build statements for EXECUTABLE target CriticalPath


#############################################
# Order-only phony target for CriticalPath

build cmake_object_order_depends_target_CriticalPath: phony || CMakeFiles/CriticalPath.dir

build CMakeFiles/CriticalPath.dir/CriticalPath.cpp.obj: CXX_COMPILER__CriticalPath_Debug D$:/data/duotone/repo/06-Graph/TextBook/CriticalPath.cpp || cmake_object_order_depends_target_CriticalPath
  DEP_FILE = CMakeFiles\CriticalPath.dir\CriticalPath.cpp.obj.d
  FLAGS = -g -fdiagnostics-color=always -std=gnu++20
  OBJECT_DIR = CMakeFiles\CriticalPath.dir
  OBJECT_FILE_DIR = CMakeFiles\CriticalPath.dir


# =============================================================================
# Link build statements for EXECUTABLE target CriticalPath


#############################################
# Link the executable CriticalPath.exe

build CriticalPath.exe: CXX_EXECUTABLE_LINKER__CriticalPath_Debug CMakeFiles/CriticalPath.dir/CriticalPath.cpp.obj
  FLAGS = -g
  LINK_LIBRARIES = -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
  OBJECT_DIR = CMakeFiles\CriticalPath.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_FILE = CriticalPath.exe
  TARGET_IMPLIB = libCriticalPath.dll.a
  TARGET_PDB = CriticalPath.exe.dbg


#############################################
# Utility command for edit_cache

build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D D:\data\duotone\repo\06-Graph\TextBook\cmake-build-debug && "D:\CLion 2023.1.1\bin\cmake\win\x64\bin\cmake.exe" -E echo "No interactive CMake dialog available.""
  DESC = No interactive CMake dialog available...
  restat = 1

build edit_cache: phony CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D D:\data\duotone\repo\06-Graph\TextBook\cmake-build-debug && "D:\CLion 2023.1.1\bin\cmake\win\x64\bin\cmake.exe" --regenerate-during-build -SD:\data\duotone\repo\06-Graph\TextBook -BD:\data\duotone\repo\06-Graph\TextBook\cmake-build-debug"
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build rebuild_cache: phony CMakeFiles/rebuild_cache.util

# =============================================================================
# Target aliases.

build AdjacencyList: phony AdjacencyList.exe

build AdjacencyMatrix: phony AdjacencyMatrix.exe

build BFS: phony BFS.exe

build CriticalPath: phony CriticalPath.exe

build DFS: phony DFS.exe

build Graph: phony Graph.exe

build MinimumCostSpanningTree: phony MinimumCostSpanningTree.exe

build ShortestPath: phony ShortestPath.exe

build TopologicalSort: phony TopologicalSort.exe

# =============================================================================
# Folder targets.

# =============================================================================

#############################################
# Folder: D:/data/duotone/repo/06-Graph/TextBook/cmake-build-debug

build all: phony Graph.exe AdjacencyMatrix.exe AdjacencyList.exe DFS.exe BFS.exe MinimumCostSpanningTree.exe ShortestPath.exe TopologicalSort.exe CriticalPath.exe

# =============================================================================
# Built-in targets


#############################################
# Re-run CMake if any of its inputs changed.

build build.ninja: RERUN_CMAKE | CMakeCache.txt CMakeFiles/3.25.2/CMakeCCompiler.cmake CMakeFiles/3.25.2/CMakeCXXCompiler.cmake CMakeFiles/3.25.2/CMakeRCCompiler.cmake CMakeFiles/3.25.2/CMakeSystem.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeCInformation.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeCXXInformation.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeCommonLanguageInclude.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeGenericSystem.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeInitializeConfigs.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeLanguageInformation.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeRCInformation.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeSystemSpecificInformation.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeSystemSpecificInitialize.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Compiler/CMakeCommonCompilerMacros.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Compiler/GNU-C.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Compiler/GNU-CXX.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Compiler/GNU.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-GNU-C-ABI.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-GNU-C.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-GNU-CXX-ABI.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-GNU-CXX.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-GNU.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-windres.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/WindowsPaths.cmake D$:/data/duotone/repo/06-Graph/TextBook/CMakeLists.txt
  pool = console


#############################################
# A missing CMake input file is not an error.

build CMakeCache.txt CMakeFiles/3.25.2/CMakeCCompiler.cmake CMakeFiles/3.25.2/CMakeCXXCompiler.cmake CMakeFiles/3.25.2/CMakeRCCompiler.cmake CMakeFiles/3.25.2/CMakeSystem.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeCInformation.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeCXXInformation.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeCommonLanguageInclude.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeGenericSystem.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeInitializeConfigs.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeLanguageInformation.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeRCInformation.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeSystemSpecificInformation.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeSystemSpecificInitialize.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Compiler/CMakeCommonCompilerMacros.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Compiler/GNU-C.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Compiler/GNU-CXX.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Compiler/GNU.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-GNU-C-ABI.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-GNU-C.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-GNU-CXX-ABI.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-GNU-CXX.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-GNU.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-windres.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/WindowsPaths.cmake D$:/data/duotone/repo/06-Graph/TextBook/CMakeLists.txt: phony


#############################################
# Clean all the built files.

build clean: CLEAN


#############################################
# Print all primary targets available.

build help: HELP


#############################################
# Make the all target the default.

default all
