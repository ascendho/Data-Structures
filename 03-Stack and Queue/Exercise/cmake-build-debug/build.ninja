# CMAKE generated file: DO NOT EDIT!
# Generated by "Ninja" Generator, CMake Version 3.25

# This file contains all the build statements describing the
# compilation DAG.

# =============================================================================
# Write statements declared in CMakeLists.txt:
# 
# Which is the root file.
# =============================================================================

# =============================================================================
# Project: Exercise
# Configurations: Debug
# =============================================================================

#############################################
# Minimal version of Ninja required by this file

ninja_required_version = 1.5


#############################################
# Set configuration variable for custom commands.

CONFIGURATION = Debug
# =============================================================================
# Include auxiliary files.


#############################################
# Include rules file.

include CMakeFiles/rules.ninja

# =============================================================================

#############################################
# Logical path to working directory; prefix for absolute paths.

cmake_ninja_workdir = D$:/data/duotone/repo/03-Stack$ and$ Queue/Exercise/cmake-build-debug/
# =============================================================================
# Object build statements for EXECUTABLE target IsPalindrome


#############################################
# Order-only phony target for IsPalindrome

build cmake_object_order_depends_target_IsPalindrome: phony || cmake_object_order_depends_target_IsPalindromeLib

build CMakeFiles/IsPalindrome.dir/IsPalindrome.cpp.obj: CXX_COMPILER__IsPalindrome_Debug D$:/data/duotone/repo/03-Stack$ and$ Queue/Exercise/IsPalindrome.cpp || cmake_object_order_depends_target_IsPalindrome
  DEP_FILE = CMakeFiles\IsPalindrome.dir\IsPalindrome.cpp.obj.d
  FLAGS = -g -fdiagnostics-color=always -std=gnu++20
  OBJECT_DIR = CMakeFiles\IsPalindrome.dir
  OBJECT_FILE_DIR = CMakeFiles\IsPalindrome.dir

build CMakeFiles/IsPalindrome.dir/IsPalindrome-main.cpp.obj: CXX_COMPILER__IsPalindrome_Debug D$:/data/duotone/repo/03-Stack$ and$ Queue/Exercise/IsPalindrome-main.cpp || cmake_object_order_depends_target_IsPalindrome
  DEP_FILE = CMakeFiles\IsPalindrome.dir\IsPalindrome-main.cpp.obj.d
  FLAGS = -g -fdiagnostics-color=always -std=gnu++20
  OBJECT_DIR = CMakeFiles\IsPalindrome.dir
  OBJECT_FILE_DIR = CMakeFiles\IsPalindrome.dir


# =============================================================================
# Link build statements for EXECUTABLE target IsPalindrome


#############################################
# Link the executable IsPalindrome.exe

build IsPalindrome.exe: CXX_EXECUTABLE_LINKER__IsPalindrome_Debug CMakeFiles/IsPalindrome.dir/IsPalindrome.cpp.obj CMakeFiles/IsPalindrome.dir/IsPalindrome-main.cpp.obj | libIsPalindromeLib.a || libIsPalindromeLib.a
  FLAGS = -g
  LINK_LIBRARIES = libIsPalindromeLib.a  -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
  OBJECT_DIR = CMakeFiles\IsPalindrome.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_FILE = IsPalindrome.exe
  TARGET_IMPLIB = libIsPalindrome.dll.a
  TARGET_PDB = IsPalindrome.exe.dbg

# =============================================================================
# Object build statements for STATIC_LIBRARY target IsPalindromeLib


#############################################
# Order-only phony target for IsPalindromeLib

build cmake_object_order_depends_target_IsPalindromeLib: phony || CMakeFiles/IsPalindromeLib.dir

build CMakeFiles/IsPalindromeLib.dir/D_/data/duotone/repo/03-Stack_and_Queue/TextBook/SqStack.cpp.obj: CXX_COMPILER__IsPalindromeLib_Debug D$:/data/duotone/repo/03-Stack$ and$ Queue/TextBook/SqStack.cpp || cmake_object_order_depends_target_IsPalindromeLib
  DEP_FILE = CMakeFiles\IsPalindromeLib.dir\D_\data\duotone\repo\03-Stack_and_Queue\TextBook\SqStack.cpp.obj.d
  FLAGS = -g -fdiagnostics-color=always -std=gnu++20
  OBJECT_DIR = CMakeFiles\IsPalindromeLib.dir
  OBJECT_FILE_DIR = CMakeFiles\IsPalindromeLib.dir\D_\data\duotone\repo\03-Stack_and_Queue\TextBook


# =============================================================================
# Link build statements for STATIC_LIBRARY target IsPalindromeLib


#############################################
# Link the static library libIsPalindromeLib.a

build libIsPalindromeLib.a: CXX_STATIC_LIBRARY_LINKER__IsPalindromeLib_Debug CMakeFiles/IsPalindromeLib.dir/D_/data/duotone/repo/03-Stack_and_Queue/TextBook/SqStack.cpp.obj
  LANGUAGE_COMPILE_FLAGS = -g
  OBJECT_DIR = CMakeFiles\IsPalindromeLib.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_FILE = libIsPalindromeLib.a
  TARGET_PDB = IsPalindromeLib.a.dbg

# =============================================================================
# Object build statements for EXECUTABLE target Postfix


#############################################
# Order-only phony target for Postfix

build cmake_object_order_depends_target_Postfix: phony || cmake_object_order_depends_target_PostfixLib

build CMakeFiles/Postfix.dir/Postfix.cpp.obj: CXX_COMPILER__Postfix_Debug D$:/data/duotone/repo/03-Stack$ and$ Queue/Exercise/Postfix.cpp || cmake_object_order_depends_target_Postfix
  DEP_FILE = CMakeFiles\Postfix.dir\Postfix.cpp.obj.d
  FLAGS = -g -fdiagnostics-color=always -std=gnu++20
  OBJECT_DIR = CMakeFiles\Postfix.dir
  OBJECT_FILE_DIR = CMakeFiles\Postfix.dir

build CMakeFiles/Postfix.dir/Postfix-main.cpp.obj: CXX_COMPILER__Postfix_Debug D$:/data/duotone/repo/03-Stack$ and$ Queue/Exercise/Postfix-main.cpp || cmake_object_order_depends_target_Postfix
  DEP_FILE = CMakeFiles\Postfix.dir\Postfix-main.cpp.obj.d
  FLAGS = -g -fdiagnostics-color=always -std=gnu++20
  OBJECT_DIR = CMakeFiles\Postfix.dir
  OBJECT_FILE_DIR = CMakeFiles\Postfix.dir


# =============================================================================
# Link build statements for EXECUTABLE target Postfix


#############################################
# Link the executable Postfix.exe

build Postfix.exe: CXX_EXECUTABLE_LINKER__Postfix_Debug CMakeFiles/Postfix.dir/Postfix.cpp.obj CMakeFiles/Postfix.dir/Postfix-main.cpp.obj | libPostfixLib.a || libPostfixLib.a
  FLAGS = -g
  LINK_LIBRARIES = libPostfixLib.a  -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
  OBJECT_DIR = CMakeFiles\Postfix.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_FILE = Postfix.exe
  TARGET_IMPLIB = libPostfix.dll.a
  TARGET_PDB = Postfix.exe.dbg

# =============================================================================
# Object build statements for STATIC_LIBRARY target PostfixLib


#############################################
# Order-only phony target for PostfixLib

build cmake_object_order_depends_target_PostfixLib: phony || CMakeFiles/PostfixLib.dir

build CMakeFiles/PostfixLib.dir/D_/data/duotone/repo/03-Stack_and_Queue/TextBook/SqStack.cpp.obj: CXX_COMPILER__PostfixLib_Debug D$:/data/duotone/repo/03-Stack$ and$ Queue/TextBook/SqStack.cpp || cmake_object_order_depends_target_PostfixLib
  DEP_FILE = CMakeFiles\PostfixLib.dir\D_\data\duotone\repo\03-Stack_and_Queue\TextBook\SqStack.cpp.obj.d
  FLAGS = -g -fdiagnostics-color=always -std=gnu++20
  OBJECT_DIR = CMakeFiles\PostfixLib.dir
  OBJECT_FILE_DIR = CMakeFiles\PostfixLib.dir\D_\data\duotone\repo\03-Stack_and_Queue\TextBook


# =============================================================================
# Link build statements for STATIC_LIBRARY target PostfixLib


#############################################
# Link the static library libPostfixLib.a

build libPostfixLib.a: CXX_STATIC_LIBRARY_LINKER__PostfixLib_Debug CMakeFiles/PostfixLib.dir/D_/data/duotone/repo/03-Stack_and_Queue/TextBook/SqStack.cpp.obj
  LANGUAGE_COMPILE_FLAGS = -g
  OBJECT_DIR = CMakeFiles\PostfixLib.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_FILE = libPostfixLib.a
  TARGET_PDB = PostfixLib.a.dbg

# =============================================================================
# Object build statements for EXECUTABLE target DblStack


#############################################
# Order-only phony target for DblStack

build cmake_object_order_depends_target_DblStack: phony || CMakeFiles/DblStack.dir

build CMakeFiles/DblStack.dir/DblStack.cpp.obj: CXX_COMPILER__DblStack_Debug D$:/data/duotone/repo/03-Stack$ and$ Queue/Exercise/DblStack.cpp || cmake_object_order_depends_target_DblStack
  DEP_FILE = CMakeFiles\DblStack.dir\DblStack.cpp.obj.d
  FLAGS = -g -fdiagnostics-color=always -std=gnu++20
  OBJECT_DIR = CMakeFiles\DblStack.dir
  OBJECT_FILE_DIR = CMakeFiles\DblStack.dir

build CMakeFiles/DblStack.dir/DblStack-main.cpp.obj: CXX_COMPILER__DblStack_Debug D$:/data/duotone/repo/03-Stack$ and$ Queue/Exercise/DblStack-main.cpp || cmake_object_order_depends_target_DblStack
  DEP_FILE = CMakeFiles\DblStack.dir\DblStack-main.cpp.obj.d
  FLAGS = -g -fdiagnostics-color=always -std=gnu++20
  OBJECT_DIR = CMakeFiles\DblStack.dir
  OBJECT_FILE_DIR = CMakeFiles\DblStack.dir


# =============================================================================
# Link build statements for EXECUTABLE target DblStack


#############################################
# Link the executable DblStack.exe

build DblStack.exe: CXX_EXECUTABLE_LINKER__DblStack_Debug CMakeFiles/DblStack.dir/DblStack.cpp.obj CMakeFiles/DblStack.dir/DblStack-main.cpp.obj
  FLAGS = -g
  LINK_LIBRARIES = -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
  OBJECT_DIR = CMakeFiles\DblStack.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_FILE = DblStack.exe
  TARGET_IMPLIB = libDblStack.dll.a
  TARGET_PDB = DblStack.exe.dbg

# =============================================================================
# Object build statements for EXECUTABLE target SqQueueWithTag


#############################################
# Order-only phony target for SqQueueWithTag

build cmake_object_order_depends_target_SqQueueWithTag: phony || CMakeFiles/SqQueueWithTag.dir

build CMakeFiles/SqQueueWithTag.dir/SqQueueWithTag.cpp.obj: CXX_COMPILER__SqQueueWithTag_Debug D$:/data/duotone/repo/03-Stack$ and$ Queue/Exercise/SqQueueWithTag.cpp || cmake_object_order_depends_target_SqQueueWithTag
  DEP_FILE = CMakeFiles\SqQueueWithTag.dir\SqQueueWithTag.cpp.obj.d
  FLAGS = -g -fdiagnostics-color=always -std=gnu++20
  OBJECT_DIR = CMakeFiles\SqQueueWithTag.dir
  OBJECT_FILE_DIR = CMakeFiles\SqQueueWithTag.dir

build CMakeFiles/SqQueueWithTag.dir/SqQueueWithTag-main.cpp.obj: CXX_COMPILER__SqQueueWithTag_Debug D$:/data/duotone/repo/03-Stack$ and$ Queue/Exercise/SqQueueWithTag-main.cpp || cmake_object_order_depends_target_SqQueueWithTag
  DEP_FILE = CMakeFiles\SqQueueWithTag.dir\SqQueueWithTag-main.cpp.obj.d
  FLAGS = -g -fdiagnostics-color=always -std=gnu++20
  OBJECT_DIR = CMakeFiles\SqQueueWithTag.dir
  OBJECT_FILE_DIR = CMakeFiles\SqQueueWithTag.dir


# =============================================================================
# Link build statements for EXECUTABLE target SqQueueWithTag


#############################################
# Link the executable SqQueueWithTag.exe

build SqQueueWithTag.exe: CXX_EXECUTABLE_LINKER__SqQueueWithTag_Debug CMakeFiles/SqQueueWithTag.dir/SqQueueWithTag.cpp.obj CMakeFiles/SqQueueWithTag.dir/SqQueueWithTag-main.cpp.obj
  FLAGS = -g
  LINK_LIBRARIES = -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
  OBJECT_DIR = CMakeFiles\SqQueueWithTag.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_FILE = SqQueueWithTag.exe
  TARGET_IMPLIB = libSqQueueWithTag.dll.a
  TARGET_PDB = SqQueueWithTag.exe.dbg


#############################################
# Utility command for edit_cache

build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "D:\data\duotone\repo\03-Stack and Queue\Exercise\cmake-build-debug" && "D:\CLion 2023.1.1\bin\cmake\win\x64\bin\cmake.exe" -E echo "No interactive CMake dialog available.""
  DESC = No interactive CMake dialog available...
  restat = 1

build edit_cache: phony CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "D:\data\duotone\repo\03-Stack and Queue\Exercise\cmake-build-debug" && "D:\CLion 2023.1.1\bin\cmake\win\x64\bin\cmake.exe" --regenerate-during-build -S"D:\data\duotone\repo\03-Stack and Queue\Exercise" -B"D:\data\duotone\repo\03-Stack and Queue\Exercise\cmake-build-debug""
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build rebuild_cache: phony CMakeFiles/rebuild_cache.util

# =============================================================================
# Target aliases.

build DblStack: phony DblStack.exe

build IsPalindrome: phony IsPalindrome.exe

build IsPalindromeLib: phony libIsPalindromeLib.a

build Postfix: phony Postfix.exe

build PostfixLib: phony libPostfixLib.a

build SqQueueWithTag: phony SqQueueWithTag.exe

# =============================================================================
# Folder targets.

# =============================================================================

#############################################
# Folder: D:/data/duotone/repo/03-Stack and Queue/Exercise/cmake-build-debug

build all: phony IsPalindrome.exe libIsPalindromeLib.a Postfix.exe libPostfixLib.a DblStack.exe SqQueueWithTag.exe

# =============================================================================
# Built-in targets


#############################################
# Re-run CMake if any of its inputs changed.

build build.ninja: RERUN_CMAKE | CMakeCache.txt CMakeFiles/3.25.2/CMakeCCompiler.cmake CMakeFiles/3.25.2/CMakeCXXCompiler.cmake CMakeFiles/3.25.2/CMakeRCCompiler.cmake CMakeFiles/3.25.2/CMakeSystem.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeCInformation.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeCXXInformation.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeCommonLanguageInclude.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeGenericSystem.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeInitializeConfigs.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeLanguageInformation.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeRCInformation.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeSystemSpecificInformation.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeSystemSpecificInitialize.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Compiler/CMakeCommonCompilerMacros.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Compiler/GNU-C.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Compiler/GNU-CXX.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Compiler/GNU.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-GNU-C-ABI.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-GNU-C.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-GNU-CXX-ABI.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-GNU-CXX.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-GNU.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-windres.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/WindowsPaths.cmake D$:/data/duotone/repo/03-Stack$ and$ Queue/Exercise/CMakeLists.txt
  pool = console


#############################################
# A missing CMake input file is not an error.

build CMakeCache.txt CMakeFiles/3.25.2/CMakeCCompiler.cmake CMakeFiles/3.25.2/CMakeCXXCompiler.cmake CMakeFiles/3.25.2/CMakeRCCompiler.cmake CMakeFiles/3.25.2/CMakeSystem.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeCInformation.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeCXXInformation.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeCommonLanguageInclude.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeGenericSystem.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeInitializeConfigs.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeLanguageInformation.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeRCInformation.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeSystemSpecificInformation.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeSystemSpecificInitialize.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Compiler/CMakeCommonCompilerMacros.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Compiler/GNU-C.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Compiler/GNU-CXX.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Compiler/GNU.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-GNU-C-ABI.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-GNU-C.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-GNU-CXX-ABI.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-GNU-CXX.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-GNU.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows-windres.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/Windows.cmake D$:/CLion$ 2023.1.1/bin/cmake/win/x64/share/cmake-3.25/Modules/Platform/WindowsPaths.cmake D$:/data/duotone/repo/03-Stack$ and$ Queue/Exercise/CMakeLists.txt: phony


#############################################
# Clean all the built files.

build clean: CLEAN


#############################################
# Print all primary targets available.

build help: HELP


#############################################
# Make the all target the default.

default all
